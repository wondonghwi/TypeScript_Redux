{"version":3,"sources":["modules/todos.ts","components/TodoInsert.tsx","components/TodoItem.tsx","components/TodoList.tsx","containers/TodoApp.tsx","App.tsx","reportWebVitals.ts","modules/counter.ts","modules/index.ts","index.tsx"],"names":["nextId","addTodo","createAction","text","id","done","toggleTodo","removeTodo","todos","createReducer","handleAction","state","action","filter","todo","payload","map","concat","TodoInsert","onInsert","useState","value","setValue","onSubmit","e","preventDefault","onChange","target","placeholder","type","TodoItem","onToggle","onRemove","textStyle","textDecoration","onClick","style","color","marginLeft","TodoList","length","TodoApp","useSelector","dispatch","useDispatch","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","increase","decrease","increaseBy","counter","count","rootReducer","combineReducers","store","createStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6ea0107b.chunk.js","sourcesContent":["import {ActionType, createAction, createReducer} from \"typesafe-actions\";\n\nlet nextId = 1;\n\nexport const addTodo = createAction(\"todos/ADD_TODO\", (text: string) => ({\n    id: nextId++,\n    text: text,\n    done: false,\n}))<Todo>();\n\nexport const toggleTodo = createAction(\"todos/TOGGLE_TODO\")<number>();\nexport const removeTodo = createAction(\"todos/REMOVE_TODO\")<number>();\n\nconst actions = {\n    addTodo,\n    toggleTodo,\n    removeTodo\n};\n\ntype TodosAction = ActionType<typeof actions>\n\nexport interface Todo {\n    id: number;\n    text: string;\n    done: boolean;\n}\n\ntype TodosState = Todo[];\n\nconst initialState: TodosState = [];\n\nexport const todos = createReducer<TodosState, TodosAction>(initialState)\n    .handleAction(removeTodo, (state, action) =>\n        state.filter((todo) => todo.id !== action.payload)\n    )\n    .handleAction(toggleTodo, (state, action) =>\n        state.map((todo) =>\n            todo.id === action.payload ? { ...todo, done: !todo.done } : todo\n        )\n    )\n    .handleAction(addTodo, (state, action) =>\n        state.concat({ ...action.payload })\n    );\n\n","import React, {FormEvent, useState} from 'react';\n\ninterface TodoInsertProps {\n    onInsert: (state: string) => void;\n}\n\nconst TodoInsert = ({onInsert}: TodoInsertProps) => {\n    const [value, setValue] = useState('');\n    const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setValue(e.target.value);\n    };\n\n    const onSubmit = (e: FormEvent) => {\n        e.preventDefault();\n        onInsert(value);\n        setValue('');\n    };\n\n    return (\n        <form onSubmit={onSubmit}>\n            <input value={value} onChange={onChange} placeholder='할 일을 입력하세요!'/>\n            <button type='submit'>등록</button>\n        </form>\n    );\n};\n\nexport default TodoInsert;","import React, {CSSProperties} from 'react';\nimport {Todo} from \"../modules/todos\";\n\ninterface TodoItemProps {\n    todo: Todo;\n    onToggle: (id: number) => void;\n    onRemove: (id: number) => void\n}\n\nconst TodoItem = ({todo, onToggle, onRemove}: TodoItemProps) => {\n\n    const handleToggle = () => onToggle(todo.id);\n    const handleRemove = () => onRemove(todo.id);\n\n    const textStyle : CSSProperties = {\n        textDecoration : todo.done ? 'line-through' : 'none'\n    };\n\n    const removeStyle : CSSProperties = {\n        color : 'red',\n        marginLeft: 8\n    };\n\n    return (\n        <li>\n            <span onClick={handleToggle} style={textStyle}>{todo.text}</span>\n            <span onClick={handleRemove} style={removeStyle}>(X)</span>\n        </li>\n    );\n};\n\nexport default TodoItem;","import React from 'react';\nimport {Todo} from \"../modules/todos\";\nimport TodoItem from \"./TodoItem\";\n\ninterface TodoListProps {\n    todos : Todo[];\n    onToggle: (id : number) => void;\n    onRemove: (id : number) => void;\n}\n\nconst TodoList = ({ todos , onToggle , onRemove } : TodoListProps) => {\n    if (todos.length === 0) return <p>등록된 항목이없습니다.</p>;\n    return (\n        <ul>\n            {todos.map(todo => (\n                <TodoItem todo={todo} onToggle={onToggle} onRemove={onRemove} key={todo.id}/>\n            ))}\n        </ul>\n    );\n};\n\nexport default TodoList;","import React from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {RootState} from \"../modules\";\nimport {addTodo, removeTodo, toggleTodo} from \"../modules/todos\";\nimport TodoInsert from \"../components/TodoInsert\";\nimport TodoList from \"../components/TodoList\";\n\nconst TodoApp = () => {\n\n    const todos = useSelector((state: RootState) => state.todos);\n    const dispatch = useDispatch();\n\n    const onInsert = (text: string) => {\n        dispatch(addTodo(text));\n    }\n\n    const onToggle = (id: number) => {\n        dispatch(toggleTodo(id));\n    }\n\n    const onRemove = (id: number) => {\n        dispatch(removeTodo(id));\n    }\n\n    return (\n        <>\n            <TodoInsert onInsert={onInsert}/>\n            <TodoList todos={todos} onToggle={onToggle} onRemove={onRemove}/>\n        </>\n    );\n};\n\nexport default TodoApp;","import React from 'react';\nimport TodoApp from \"./containers/TodoApp\";\n\nconst App = () => {\n    return (\n        <div>\n            <TodoApp />\n        </div>\n    );\n};\n\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {createAction, ActionType, createReducer} from 'typesafe-actions';\n\n// 액션 생성함수를 선언합니다\nexport const increase = createAction('counter/INCREASE')();\nexport const decrease = createAction('counter/DECREASE')();\nexport const increaseBy = createAction('counter/INCREASE_BY')<number>(); // payload 타입을 Generics 로 설정해주세요.\n\n// 액션 객체 타입 준비\nconst actions = {increase, decrease, increaseBy}; // 모든 액션 생성함수들을 actions 객체에 넣습니다\ntype CounterAction = ActionType<typeof actions>; // ActionType 를 사용하여 모든 액션 객체들의 타입을 준비해줄 수 있습니다\n\n// 이 리덕스 모듈에서 관리 할 상태의 타입을 선언합니다\ntype CounterState = {\n    count: number;\n};\n\n// 초기상태를 선언합니다.\nconst initialState: CounterState = {\n    count: 0\n};\n\n// 리듀서를 만듭니다\n// createReducer 는 리듀서를 쉽게 만들 수 있게 해주는 함수입니다.\n// Generics로 리듀서에서 관리할 상태, 그리고 리듀서에서 처리 할 모든 액션 객체들의 타입을 넣어야합니다\nexport const counter = createReducer<CounterState, CounterAction>(initialState)\n    .handleAction(increase, state => ({count: state.count + 1}))\n    .handleAction(decrease, state => ({count: state.count - 1}))\n    .handleAction(increaseBy, (state, action) => ({\n        count: state.count + action.payload\n    }));\n\nexport default counter;\n","import {combineReducers} from \"redux\";\nimport {counter} from \"./counter\";\nimport {todos} from \"./todos\";\n\nconst rootReducer = combineReducers({\n    counter,\n    todos,\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof  rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {createStore} from \"redux\";\nimport rootReducer from \"./modules\";\nimport {Provider} from \"react-redux\";\n\nconst store = createStore(rootReducer);\n\nReactDOM.render(\n    <React.StrictMode>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}